/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.client.entity.EntityPlayerSP
 *  net.minecraft.entity.Entity
 *  net.minecraft.entity.player.EntityPlayer
 *  net.minecraft.init.Items
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.client.CPacketPlayer
 *  net.minecraft.util.EnumHand
 *  net.minecraft.world.World
 *  net.minecraftforge.fml.common.gameevent.TickEvent$PlayerTickEvent
 */
package i.gishreloaded.deadcode.hacks.exploit;

import i.gishreloaded.deadcode.hack.Hack;
import i.gishreloaded.deadcode.hack.HackCategory;
import i.gishreloaded.deadcode.value.Mode;
import i.gishreloaded.deadcode.value.types.IntegerValue;
import i.gishreloaded.deadcode.value.types.ModeValue;
import i.gishreloaded.deadcode.wrappers.Wrapper;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.EnumHand;
import net.minecraft.world.World;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class RodLeave
extends Hack {
    public ModeValue a;
    public IntegerValue b;

    public RodLeave(String string) {
        super(string, HackCategory.Exploit);
        this.b("General");
        this.a = new ModeValue("Mode", new Mode("Axis-Y", true), new Mode("Closest player"));
        this.b = new IntegerValue("Position-Y", 100, 5, 10000);
        this.a(this.a, this.b);
        this.b("Other");
    }

    @Override
    public String getDescription() {
        return "Rod leave.";
    }

    @Override
    public void onPlayerTickEvent(TickEvent.PlayerTickEvent playerTickEvent) {
        EntityPlayerSP entityPlayerSP = Wrapper.INSTANCE.getLocalPlayer();
        if (this.a.getModeByIndex(1).isToggled()) {
            EntityPlayer entityPlayer = this.c();
            if (entityPlayer == null || entityPlayerSP.getDistance((Entity)entityPlayer) > 8.0f) {
                return;
            }
            this.a(entityPlayer.posX, entityPlayer.posY, entityPlayer.posZ);
        } else {
            this.a(entityPlayerSP.posX, entityPlayerSP.posY + (double)this.b.getValue().intValue(), entityPlayerSP.posZ);
        }
        super.onPlayerTickEvent(playerTickEvent);
    }

    public void a(double d2, double d3, double d4) {
        EntityPlayerSP entityPlayerSP = Wrapper.INSTANCE.getLocalPlayer();
        if (entityPlayerSP.fishEntity != null && entityPlayerSP.fishEntity.caughtEntity == entityPlayerSP) {
            Wrapper.INSTANCE.getMinecraft().playerController.processRightClick((EntityPlayer)entityPlayerSP, (World)Wrapper.INSTANCE.getWorld(), this.b());
            Wrapper.INSTANCE.sendPacket((Packet)new CPacketPlayer(entityPlayerSP.onGround));
            entityPlayerSP.setPosition(d2, d3, d4);
            this.c(false);
        }
    }

    public EnumHand b() {
        EntityPlayerSP entityPlayerSP = Wrapper.INSTANCE.getLocalPlayer();
        if (entityPlayerSP.getHeldItemMainhand().getItem() == Items.FISHING_ROD) {
            return EnumHand.MAIN_HAND;
        }
        if (entityPlayerSP.getHeldItemOffhand().getItem() == Items.FISHING_ROD) {
            return EnumHand.OFF_HAND;
        }
        return null;
    }

    public EntityPlayer c() {
        EntityPlayerSP entityPlayerSP = Wrapper.INSTANCE.getLocalPlayer();
        EntityPlayer entityPlayer = null;
        for (EntityPlayer entityPlayer2 : et.c()) {
            if (entityPlayer2 == entityPlayerSP || entityPlayer != null && !(entityPlayerSP.getDistance((Entity)entityPlayer2) < entityPlayerSP.getDistance((Entity)entityPlayer))) continue;
            entityPlayer = entityPlayer2;
        }
        return entityPlayer;
    }
}

